language: generic

os:
- linux
- osx

#osx_image: xcode6.4

if: branch = master

before_install:
- |2
      # Install miniconda
      
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
          
          wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh
      
      else
      
          wget https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -O miniconda.sh
      
      fi
      
      bash miniconda.sh -b -p $HOME/miniconda
      export PATH="$HOME/miniconda/bin:$PATH"
      conda install -y -c conda-forge conda-build conda-verify

before_script:

- python -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL);
  fcntl.fcntl(sys.stdout, fcntl.F_SETFL, flags&~os.O_NONBLOCK);'
  
script:

- bash make_environment.sh
#- tar c * > threeML_env.tar.gz
- mv threeML_env.tar.gz threeML_env_${TRAVIS_OS_NAME}.tar.gz
- cp install_3ML_env.sh.in install_3ML_env_${TRAVIS_OS_NAME}.sh 
- echo "PAYLOAD:" >> install_3ML_env_${TRAVIS_OS_NAME}.sh 
- cat threeML_env_${TRAVIS_OS_NAME}.tar.gz >> install_3ML_env_${TRAVIS_OS_NAME}.sh 

before_deploy:
  # Set up git user name and tag this commit
  - git config --global user.email "travis@travis-ci.org"
  - git config --global user.name "Travis CI"
  - export TRAVIS_TAG=${TRAVIS_TAG:-$(cat recipe/meta.yaml | grep -Po 'set version = "\K(.+)" .+' | cut -f1 -d'"')}
  - git tag $TRAVIS_TAG
  
deploy:

  provider: releases
  api_key: $GH_TOKEN
  file: install_3ML_env_${TRAVIS_OS_NAME}.sh 
  skip_cleanup: true

env:
  matrix:
    secure: a8nlpmjR91HM4vJ6iOOhR2quLcgMMmxMgebIgPCW3giTfByqbsOVVgalxTJHYYE4rnRBXyoODOg5+B+91zTPY/Ldhtx04G8tIgESlE/9LJKbG7tkyd5ENYILJ86HZpDoNju7w3bssMParUw6uYnaVc/xiBYpALSecNh4RovYlxlquNQuaKS3fbbbmFFThE7/om4IKhaIGbAPusirn30TINXnUI4KFa7EUuRZo7QHMkWpRR24X/KRyPf60mcbi8SD+gzL/JKhl6maQHZUjFj6Y3W5VUst2kKMgX2NoWWYoyIbzg0HMKIX0e6Q1Kd4OaljbcyApRi5gUkX+KNftRCkirkY/e5/uZP5PEiUMd/fFqxfdd2HEo+vo4dtG5uC+RNn7VartSxXrgwcHGJLXeMKsT/bsB3RQET2Xorhff1FoXJYhIBFmrE6o7S/C6pNWUlIAAxXVyMRgPkayQkRrDdBn/w7qVoKUz2FKRJ0OUIqk49TJNuhNjJ4kEqMW2pXjthhzlfG4YfAA21rjor8gPQoUAMxQMmcOuLrhq8Z23p2Ss65/qfFixTXZdfMfkp1AqMiIF3GEJepMSO1OwId1Tjnb1rMv9xbDsTpp4gh7KvqFYMY/vEw7sS60uQYUJYiYJtLhBxvifxWjIls/5qUqSrzuUx8poQ5GHK0/lwilgRqhac=
